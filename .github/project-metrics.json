{
  "project": {
    "name": "liquid-ai-vision-kit",
    "version": "1.0.0",
    "description": "Liquid Neural Networks for embedded vision systems",
    "repository": "https://github.com/danieleschmidt/liquid-ai-vision-kit",
    "license": "MIT",
    "created": "2025-01-01",
    "last_updated": "2025-01-01"
  },
  "metrics": {
    "code": {
      "lines_of_code": {
        "cpp": 15000,
        "headers": 8000,
        "python": 5000,
        "cmake": 1500,
        "total": 29500
      },
      "files": {
        "source_files": 45,
        "header_files": 30,
        "test_files": 25,
        "documentation_files": 40,
        "total_files": 140
      },
      "complexity": {
        "cyclomatic_complexity": 2.8,
        "maintainability_index": 85,
        "technical_debt_ratio": 0.15
      }
    },
    "testing": {
      "coverage": {
        "line_coverage": 95,
        "branch_coverage": 88,
        "function_coverage": 98
      },
      "test_counts": {
        "unit_tests": 150,
        "integration_tests": 45,
        "performance_tests": 25,
        "e2e_tests": 15,
        "total_tests": 235
      },
      "test_execution": {
        "average_execution_time_ms": 1250,
        "fastest_test_ms": 1,
        "slowest_test_ms": 5000,
        "success_rate": 99.5
      }
    },
    "performance": {
      "inference": {
        "average_latency_ms": 12.5,
        "p95_latency_ms": 18.0,
        "p99_latency_ms": 22.0,
        "throughput_fps": 50.0
      },
      "memory": {
        "peak_usage_kb": 256,
        "average_usage_kb": 180,
        "heap_fragmentation": 5.2
      },
      "power": {
        "average_consumption_mw": 420,
        "peak_consumption_mw": 580,
        "idle_consumption_mw": 120
      }
    },
    "build": {
      "build_times": {
        "debug_build_seconds": 45,
        "release_build_seconds": 120,
        "embedded_build_seconds": 180,
        "documentation_build_seconds": 30
      },
      "binary_sizes": {
        "simulation_binary_kb": 2048,
        "embedded_binary_kb": 512,
        "debug_symbols_kb": 1024
      },
      "dependencies": {
        "external_libraries": 8,
        "system_dependencies": 12,
        "development_dependencies": 25
      }
    },
    "quality": {
      "static_analysis": {
        "warnings_count": 3,
        "errors_count": 0,
        "code_smells": 8,
        "duplicated_lines_percent": 2.1
      },
      "security": {
        "vulnerabilities_count": 0,
        "security_hotspots": 2,
        "cwe_violations": 0
      },
      "documentation": {
        "api_coverage_percent": 100,
        "inline_comments_percent": 45,
        "user_guide_completeness": 90
      }
    },
    "deployment": {
      "platforms": {
        "x86_simulation": true,
        "arm_cortex_m7": true,
        "px4_integration": true,
        "jetson_nano": true,
        "raspberry_pi": true
      },
      "deployment_metrics": {
        "deployment_frequency_per_week": 2,
        "deployment_success_rate": 98.5,
        "rollback_rate": 1.5,
        "average_deployment_time_minutes": 15
      }
    },
    "community": {
      "repository": {
        "stars": 150,
        "forks": 25,
        "watchers": 45,
        "contributors": 8,
        "issues_open": 12,
        "issues_closed": 45,
        "pull_requests_merged": 78
      },
      "engagement": {
        "commits_per_week": 15,
        "active_contributors": 5,
        "discussion_threads": 8,
        "documentation_views_per_month": 500
      }
    },
    "research": {
      "model_performance": {
        "accuracy_percent": 91.2,
        "precision": 0.89,
        "recall": 0.93,
        "f1_score": 0.91
      },
      "benchmark_results": {
        "vs_traditional_cnn_speedup": 5.2,
        "vs_traditional_cnn_power_reduction": 8.1,
        "distribution_shift_robustness": 0.85
      },
      "dataset_metrics": {
        "training_samples": 50000,
        "validation_samples": 10000,
        "test_samples": 5000,
        "data_augmentation_factor": 4
      }
    }
  },
  "targets": {
    "performance_targets": {
      "inference_latency_ms": 15,
      "memory_usage_kb": 256,
      "power_consumption_mw": 500,
      "accuracy_percent": 90,
      "uptime_percent": 99.9
    },
    "quality_targets": {
      "code_coverage_percent": 95,
      "build_success_rate": 99,
      "security_vulnerabilities": 0,
      "documentation_coverage": 100
    },
    "community_targets": {
      "github_stars": 500,
      "contributors": 20,
      "issues_response_time_hours": 24,
      "documentation_completeness": 95
    }
  },
  "trends": {
    "monthly_data": [
      {
        "month": "2024-12",
        "commits": 45,
        "tests_added": 15,
        "bugs_fixed": 8,
        "features_added": 3,
        "performance_improvement_percent": 5.2
      },
      {
        "month": "2025-01",
        "commits": 52,
        "tests_added": 22,
        "bugs_fixed": 12,
        "features_added": 5,
        "performance_improvement_percent": 8.1
      }
    ]
  },
  "risk_assessment": {
    "technical_risks": [
      {
        "risk": "Memory constraints on embedded platforms",
        "impact": "high",
        "probability": "medium",
        "mitigation": "Continuous memory optimization and monitoring"
      },
      {
        "risk": "Real-time performance degradation",
        "impact": "high",
        "probability": "low",
        "mitigation": "Performance testing and automated benchmarks"
      }
    ],
    "business_risks": [
      {
        "risk": "Limited contributor base",
        "impact": "medium",
        "probability": "medium",
        "mitigation": "Community outreach and documentation improvement"
      }
    ]
  },
  "reporting": {
    "automated_reports": {
      "daily_metrics": true,
      "weekly_summary": true,
      "monthly_deep_dive": true,
      "quarterly_review": true
    },
    "dashboard_urls": {
      "performance_dashboard": "https://grafana.liquid-ai-vision.com",
      "quality_dashboard": "https://sonar.liquid-ai-vision.com",
      "build_dashboard": "https://ci.liquid-ai-vision.com"
    }
  },
  "metadata": {
    "collection_frequency": "daily",
    "data_retention_days": 365,
    "last_collection": "2025-01-01T00:00:00Z",
    "collection_tools": [
      "github_api",
      "sonarqube",
      "prometheus",
      "custom_scripts"
    ]
  }
}