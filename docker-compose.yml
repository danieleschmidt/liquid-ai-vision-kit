version: '3.8'

services:
  # Development environment with full toolchain
  liquid-dev:
    build:
      context: .
      target: development
    container_name: liquid-vision-dev
    volumes:
      - .:/workspace
      - liquid-build:/workspace/build
      - ~/.gitconfig:/home/dev/.gitconfig:ro
    environment:
      - CMAKE_BUILD_TYPE=Debug
      - TARGET_PLATFORM=X86_SIMULATION
    ports:
      - "8080:8080"  # Documentation server
      - "3333:3333"  # OpenOCD debugging
      - "5760:5760"  # MAVLink/PX4 SITL
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0  # Hardware programming
      - /dev/ttyACM0:/dev/ttyACM0  # Serial communication
    privileged: true  # For hardware access
    stdin_open: true
    tty: true
    working_dir: /workspace

  # Simulation environment
  liquid-sim:
    build:
      context: .
      target: simulation
    container_name: liquid-vision-sim
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data:ro
    environment:
      - SIMULATION_MODE=1
      - LOG_LEVEL=INFO
    ports:
      - "8081:8080"  # Simulation web interface
    restart: unless-stopped

  # Documentation server
  docs:
    image: nginx:alpine
    container_name: liquid-vision-docs
    volumes:
      - ./docs/_build/html:/usr/share/nginx/html:ro
      - ./docs/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8082:80"
    restart: unless-stopped
    depends_on:
      - liquid-dev

  # Code quality and analysis
  analysis:
    image: sonarqube:community
    container_name: liquid-vision-analysis
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    restart: unless-stopped

  # Database for analysis results
  postgres:
    image: postgres:13
    container_name: liquid-vision-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Test runner service
  test-runner:
    build:
      context: .
      target: development
    container_name: liquid-vision-tests
    volumes:
      - .:/workspace
      - liquid-test-reports:/workspace/build/test-reports
    environment:
      - PYTEST_CURRENT_TEST=1
      - COVERAGE_PROCESS_START=.coveragerc
    working_dir: /workspace
    command: |
      bash -c "
        mkdir -p build &&
        cd build &&
        cmake .. -DTARGET_PLATFORM=X86_SIMULATION -DENABLE_TESTS=ON &&
        make -j\$$(nproc) &&
        make test &&
        cd .. &&
        python3 -m pytest tests/python --junitxml=build/test-reports/pytest.xml
      "
    profiles:
      - testing

  # Performance monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: liquid-vision-monitoring
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    restart: unless-stopped
    profiles:
      - monitoring

  # Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: liquid-vision-metrics
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  liquid-build:
    driver: local
  liquid-test-reports:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local
  postgresql_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16